{"data":{"markdownRemark":{"html":"<p>伴随着 JavaScript 世界日新月异的变化，我们和我们的网站以及应用中的各种依赖文件打交道的方式也在发生着变化。</p>\n<p>这篇文章适合于那些目前仍然用多个 script 标签加载 Javascript，并发现随着他们的网页数量或应用规模扩大，依赖管理变得麻烦的开发人员。</p>\n<p>如果想要更深入地了解 ES6 模块规范的内容，以及它与 CommonJS 和 AMD 之间的区别，请查看 Axel Rauschmayer 著作的书籍 <a href=\"http://exploringjs.com/\">Exploring ES6</a> ，尤其是第十七章的内容。</p>\n<h3 id=\"什么是-javascript-模块？\"><a href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-javascript-%E6%A8%A1%E5%9D%97%EF%BC%9F\" aria-label=\"什么是 javascript 模块？ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>什么是 JavaScript 模块？</h3>\n<p>JavaScript 模块让我们可以把项目代码拆分成一个个孤立的文件，或者通过 npm 工具安装开源模块。按照模块化规范编写代码，有助于我们组织、维护、测试代码，最重要的是，有利于管理依赖关系。</p>\n<p>当我们编写 JavaScript 代码的时候，如果我们可以让每一个模块只做一件事并把这件事做好，这样是最理想的。这种分离可以让我们仅在有需求的时候才会下载各种各样的模块。模块代表了 npm 工具背后的核心理念，当我们需要特定功能的时候，我们可以安装需要的模块并将它们加载到我们的应用中。</p>\n<p>随着时间的推移，我们将看到越来越少的功能完善的大框架，而是会看到越来越多的具备良好单一功能的小模块横空出世。</p>\n<p>例如，我们许多人都学过 jQuery。它包含了可以完成从 CSS 操作到 ajax 调用的一切事情的方法。现在，许多人正迁移到类似 React 的 javascript 库，使用这些库，我们经常需要下载其它的软件包来完成 ajax 或路由的工作。</p>\n<p>这篇文章将看一下如何使用 npm 和 ES6 模块。虽然还有其它的工具（如，Bower）和模块加载器（如，CommonJS 和 AMD），但是已经有大量的文章介绍它们了。</p>\n<p>不管你是做 Node 开发还是前端开发，我相信 ES6 模块和 npm 组合是未来的方向。放眼望去，今天任意一个流行的开源项目，比如说 React 或者 lodash，你会发现它们已经采用了 ES6 模块 + npm 这对搭档。</p>\n<h3 id=\"当前工作流\"><a href=\"#%E5%BD%93%E5%89%8D%E5%B7%A5%E4%BD%9C%E6%B5%81\" aria-label=\"当前工作流 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>当前工作流</h3>\n<p>许多 JavaScript 工作流看起来像这样：</p>\n<ol>\n<li>找到一个你需要的插件或库并把它从 GitHub 上下载下来</li>\n<li>通过一个 script 标签把它加载到你的网站中</li>\n<li>借助一个全局变量或作为一个 jQuery 插件访问它</li>\n</ol>\n<p>多年以来，这种工作流运作的很棒，但并不是没有问题：</p>\n<ol>\n<li>\n<p>必须手动更新这些插件 —— 导致很难知道有严重的 bug 修复或者有可用的新功能</p>\n</li>\n<li>\n<p>混乱的源码版本控制历史 —— 所有依赖文件都需要加到源码控制当中，当库文件更新的时候，一切变得乱七八糟</p>\n</li>\n<li>\n<p>几乎无依赖管理 —— 许多脚本功能重复。但是如果采用一个 js 模块，其实就可以很容易地实现功能共享</p>\n</li>\n<li>\n<p>全局命名空间中的命名污染和冲突</p>\n</li>\n</ol>\n<p>编写 Javascript 模块的想法并不新鲜，但随着 ES6 的带来和业内认定 npm 为 Javascript 首选的包管理工具，我们刚开始看到许多开发者远离上述老的工作流，而开始致力于 ES6 和 npm 的标准化。</p>\n<h2 id=\"等等，npm-不是专门服务-node-的吗？\"><a href=\"#%E7%AD%89%E7%AD%89%EF%BC%8Cnpm-%E4%B8%8D%E6%98%AF%E4%B8%93%E9%97%A8%E6%9C%8D%E5%8A%A1-node-%E7%9A%84%E5%90%97%EF%BC%9F\" aria-label=\"等等，npm 不是专门服务 node 的吗？ permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>等等，npm 不是专门服务 Node 的吗？</h2>\n<p>Many moons ago, npm began as the package manager for Node.js, but it has since evolved to become the package manager for JavaScript and front end dev in general. Nowadays, we can cut the whole song and dance for installing libraries down to 2 steps:</p>\n<p>多年以前，npm 是作为 Node.js 的包管理器诞生的，但是，目前它已经逐渐发展成为 Javascript 和前端开发的首选软件包管理器。如今，我们可以把安装软件包的过程缩减为两个步骤：</p>\n<ol>\n<li>\n<p>通过 npm 安装依赖软件包，例如：<code class=\"language-text\">npm install lodash --save</code></p>\n</li>\n<li>\n<p>导入依赖到需要的文件，例如：</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import _ from &#39;lodash&#39;;</code></pre></div>\n<p>关于工作流还有很多东西需要我们研究，也大量的关于导入和导出模块的知识需要学习，所以就让我们一起来探究一下吧。</p>\n<h3 id=\"模块背后的理念\"><a href=\"#%E6%A8%A1%E5%9D%97%E8%83%8C%E5%90%8E%E7%9A%84%E7%90%86%E5%BF%B5\" aria-label=\"模块背后的理念 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>模块背后的理念</h3>\n<p>我们使用 import 和 export 语句在文件之间共享资源（变量、函数、数据等），而不是像原来那样把所有东西都加载到全局命名空间。每个模块将导入自己需要的依赖，并导出其它文件需要导入的资源。</p>\n<p>让所有代码能在当前浏览器中顺利运行起来需要一个打包的步骤。稍后我们会讨论这个话题，但现在我们重点关注一下 Javascript 模块背后的核心理念。</p>\n<h3 id=\"创建你自己的模块\"><a href=\"#%E5%88%9B%E5%BB%BA%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9D%97\" aria-label=\"创建你自己的模块 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>创建你自己的模块</h3>\n<p>比方说我们将建立一个线上商店应用，我们需要一个文件托管所有的 helper 函数。这样我们就可以创建一个名为 helper.js 的模块文件，其中包含了若干个 helper 函数 —— formatPrice(price)、addTax(price) 和 discountPrice(price, percentage)，以及一些针对线上商店本身的变量。</p>\n<p>我们的 helper.js 文件看起来是这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const taxRate = 0.13;\n\nconst couponCodes = [&#39;BLACKFRIDAY&#39;, &#39;FREESHIP&#39;, &#39;HOHOHO&#39;];\n\nfunction formatPrice(price) {\n    // .. do some formatting\n    return formattedPrice;\n}\n\nfunction addTax(price) {\n    return price * (1 + taxRate);\n}\n\nfunction discountPrice(price, percentage) {\n    return price * (1 - percentage);\n}</code></pre></div>\n<p>现在，每个文件都包含自己的本地函数和变量，除非显式地导出这些函数和变量，要不然他们决不会流入到其他文件的作用域。在上面的例子中，我们可能不需要 taxRate 变量用于其它模块，但是我们需要在这个模块中使用这个变量。</p>\n<p>我们怎样让上面的函数和变量可供其它模块使用呢？我们需要导出它们。在 ES6 中有两种导出途径 —— 命名导出和单一默认导出。因为我们要导出多个函数和 couponCodes 变量，我们采用命名导出。稍后有更多解释。</p>\n<p>从模块中导出数据，最简单也最直接了当的方式是在前面添加一个 export 关键字，如下所示：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const taxRate = 0.13;\n\nexport const couponCodes = [&#39;BLACKFRIDAY&#39;, &#39;FREESHIP&#39;, &#39;HOHOHO&#39;];\n\nexport function formatPrice(price) {\n    // .. do some formatting\n    return formattedPrice;\n}</code></pre></div>\n<p>我们也可以这样在后面导出它们：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export couponCodes;\nexport formatPrice;\nexport addTax;\nexport discountPrice;</code></pre></div>\n<p>或者一次全部导出：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export { couponCodes, formatPrice, addTax, discountPrice };</code></pre></div>\n<p>还有其它几个导出方法，当你使用的导出方式出现问题的时候，请查看 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export\">MDN 文档</a> 。</p>\n<h3 id=\"默认导出\"><a href=\"#%E9%BB%98%E8%AE%A4%E5%AF%BC%E5%87%BA\" aria-label=\"默认导出 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>默认导出</h3>\n<p>正如之前我们所提到的，有两种途径可以从模块中导出数据 —— 命名（named）或默认（default）。上面都是命名导出方式的实例。为了导入数据到其它模块，我们必须知道要导入变量或函数的名字 —— 演示实例马上就到。使用命名导出方式的好处是你可以从一个模块文件中导出多个条目。</p>\n<p>另一种导出方式是默认导出（default export）。当模块需要导出多个变量/函数的时候，使用命名导出；当模块只需要导出一个变量/函数的时候，使用默认导出。虽然你可以在一个模块文件中同时使用默认导出和命名导出，但是我建议你每个模块文件只用一种导出方式。</p>\n<p>默认导出的例子可能是一个名为 StorePicker 的 React 组件或者是一个数组。例如，如果我们需要把下面一个数组导出给其它组件，我们采用默认导出方式。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// people.js\nconst fullNames = [&#39;Drew Minns&#39;, &#39;Heather Payne&#39;, &#39;Kristen Spencer&#39;, &#39;Wes Bos&#39;, &#39;Ryan Christiani&#39;];\n\nconst firstNames = fullNames.map(name =&gt; name.split(&#39; &#39;).shift());\n\nexport default firstNames; // [&quot;Drew&quot;, &quot;Heather&quot;, &quot;Kristen&quot;, &quot;Wes&quot;, &quot;Ryan&quot;]</code></pre></div>\n<p>正如上面，你可以在要导出的函数前面加上 export default 字样：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export default function yell(name) { return `HEY ${name.toUpperCase()}!!` }</code></pre></div>\n<h3 id=\"导入你自己的模块\"><a href=\"#%E5%AF%BC%E5%85%A5%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9D%97\" aria-label=\"导入你自己的模块 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>导入你自己的模块</h3>\n<p>现在我们已经把代码分割成了一个个的小模块并导出了所需的模块，接下来我们要在应用中的其它部分导入这些模块。</p>\n<p>为了导入自己代码库中的模块，我们使用一个 <code class=\"language-text\">import</code> 语句，然后指向一个文件路径，相对于当前模块所在路径 —— 就像你使用任何 HTML 源文件或 CSS 背景图像的路径一样。你会注意到我们去掉了 .js 文件扩展名，因为它不是必需的。</p>\n<p>需要注意的是，我们没有一次导入所有的模块供整个应用使用，而是当一个模块依赖于另一个模块的时候 —— 比如上述代码需要一个 lodash 方法 —— 我们才导入这个方法到需要它的模块。如果有5个模块需要同样的 lodash 函数，我们就导入它5次。这有利于维持一个清晰的作用域，也使得模块具有非常好的可移植性和可重用性。</p>\n<h3 id=\"导入-named-exports-命名导出\"><a href=\"#%E5%AF%BC%E5%85%A5-named-exports-%E5%91%BD%E5%90%8D%E5%AF%BC%E5%87%BA\" aria-label=\"导入 named exports 命名导出 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>导入 named exports (命名导出)</h3>\n<p>首先我们要导出我们的 helper 模块。这里我们使用了命名导出，所以我们有多种方法导出它们：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 把所有内容作为一个对象的方法或者属性导入：\nimport * as h from &#39;./helpers&#39;;\n// 使用它们\nconst displayTotal = h.formatPrice(5000);\n\n\n//导入所有内容到当前模块作用域：\nimport * from &#39;./helpers&#39;;\nconst displayTotal = addTax(1000);\n// I&#39;d recommend against this style because it&#39;s less explicit\n// and could lead to code that&#39;s harder to maintain\n\n\n// 或者只是挑出你想要的：\nimport { couponCodes, discountPrice } from &#39;./helpers&#39;;\nconst discount = discountPrice(500, 0.33);</code></pre></div>\n<h3 id=\"导入-default-exports-（默认导出）\"><a href=\"#%E5%AF%BC%E5%85%A5-default-exports-%EF%BC%88%E9%BB%98%E8%AE%A4%E5%AF%BC%E5%87%BA%EF%BC%89\" aria-label=\"导入 default exports （默认导出） permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>导入 default exports （默认导出）</h3>\n<p>如果你记得，我们也从 people.js 文件导出了一个姓名数组，这是唯一需要从该模块导出的数据。</p>\n<p>默认导出方式可以把数据导出为任意名称 —— 所以没有必要知道要导出的变量、函数或类的名字。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import firstNames from &#39;./people&#39;;\n// 或者\nimport names from &#39;./people&#39;;\n// 或者\nimport elephants from &#39;./people&#39;;\n// 上面这些方式都可以正确导入\n\n// 你也可以这样来获取默认导出：\nimport * as stuff from &#39;./people&#39;\nconst theNames = stuff.default</code></pre></div>\n<h3 id=\"导入-npm-模块\"><a href=\"#%E5%AF%BC%E5%85%A5-npm-%E6%A8%A1%E5%9D%97\" aria-label=\"导入 npm 模块 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>导入 npm 模块</h3>\n<p>我们用到的许多模块来自 npm 仓库。不管我们需要一个类似 jQuery 的功能完备的库 ，还是一些由 lodash 提供的实用函数，或者执行 Ajax 请求类似 superagent 的库，我们都可以使用 npm 安装它们。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install jquery --save\nnpm install lodash --save\nnpm install superagent --save\n// 或者一次全搞定：\nnpm i jquery lodash superagent -S</code></pre></div>\n<p>一旦这些软件包安装到 <code class=\"language-text\">node_modules/</code> 目录下，我们就可以把它们导入到我们的代码中。默认情况下，Babel 会把 ES6 导入语句转译为 CommonJS。因此，通过使用一个明白该模块语法的打包工具（如 webpack 或 browserify），你可以很好的利用起 <code class=\"language-text\">node_modules/</code> 目录。所以我们的导出语句只需要包含 Node 模块的名字。其它的打包工具可能需要插件或配置一下，才能使用 <code class=\"language-text\">node_modules/</code> 目录的模块。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 导入整个库或者插件\nimport $ from &#39;jquery&#39;;\n// 这样就可以按照我们想要的方式来使用它们了：\n$(&#39;.cta&#39;).on(&#39;click&#39;,function() {\n    alert(&#39;Ya clicked it!&#39;);\n});</code></pre></div>\n<p>上述代码能够工作是因为 jQuery 被作为一个 CommonJS 模块导出来了，并且 Babel 转译我们的 ES6 导出语句，让其与 jQuery 的 CommonJS 导出配合工作。</p>\n<p>让我们再试试 superagent。和 jQuery 一样，superagent 使用 CommonJS 按照默认导出的方式导出了整个库，所以我们可以把它导出为任意我们喜欢的变量名 —— 通常称之为 request。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 把模块导入到我们自己的模块中\nimport request from &#39;superagent&#39;;\n// 现在就来用一下：\nrequest\n    .get(&#39;https://api.github.com/users/wesbos&#39;)\n    .end(function(err, res){\n        console.log(res.body);\n    });</code></pre></div>\n<h3 id=\"只导入需要的片段\"><a href=\"#%E5%8F%AA%E5%AF%BC%E5%85%A5%E9%9C%80%E8%A6%81%E7%9A%84%E7%89%87%E6%AE%B5\" aria-label=\"只导入需要的片段 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>只导入需要的片段</h3>\n<p>一个我最喜欢的 ES6 模块的功能是许多库让你可以有选择的只去导入你需要的功能。lodash 是一个奇妙的工具库，它提供了很多有用的 Javascript 方法。</p>\n<p>We can load the entire library into the _ variable since lodash exports the entire library as a the main module export (again, Babel transpiles our import to treat it as if lodash is using export default):</p>\n<p>我们可以加载整个库到 _ 变量中，因为 lodash 模块的主导出是把整个库导出来（依旧，Babel 可以转译我们的导入，把它看作就像 lodash 使用了 export default）</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 把整个库都导入到 _ 变量中\nimport _ from &#39;lodash&#39;;\nconst dogs = [\n  { &#39;name&#39;: &#39;snickers&#39;, &#39;age&#39;: 2, breed : &#39;King Charles&#39;},\n  { &#39;name&#39;: &#39;prudence&#39;, &#39;age&#39;: 5, breed : &#39;Poodle&#39;}\n];\n\n_.findWhere(dogs, { &#39;breed&#39;: &#39;King Charles&#39; }); // snickers object</code></pre></div>\n<p>然而，很多时候你只需要一个或两个的 lodash 方法而不是整个 lodash 库。因为 lodash 已经把每一个方法作为单独的模块导出，所以我们可以只选择需要的方法。由于 Babel 可以转译你的导入语句，所以一起都不成问题。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import { throttle } from &#39;lodash&#39;;\n$(&#39;.click-me&#39;).on(&#39;click&#39;, throttle(function() {\n  console.count(&#39;ouch!&#39;);\n}, 1000));</code></pre></div>\n<h3 id=\"打包过程\"><a href=\"#%E6%89%93%E5%8C%85%E8%BF%87%E7%A8%8B\" aria-label=\"打包过程 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>打包过程</h3>\n<p>因为浏览器还不能理解 ES6 模块，所以我们需要借助工具让 ES6 模块生效。一个 JavaScript\n打包工具会把我们的模块编译成一个 JavaScript 文件或者多个包，以供我们应用的不同部分使用。</p>\n<p>未来，我们将不再需要运行 bundler，<a href=\"https://http2.github.io/\">HTTP/2</a> 可以一次请求所有的 <code class=\"language-text\">import</code> 语句。</p>\n<p>目前，流行的打包工具有几个，其中多数依赖于 Babel 把 ES6 模块转译为 CommmonJS 模块。</p>\n<ul>\n<li>Browserify 最初创建的时候仅支持 node 风格的 CommonJS 模块。但它也能支持 ES6 模块（先要借助 Babel 把 ES6 模块转译为 CommmonJS 模块）</li>\n<li>webpack 在 React 社区很流行。它也能处理多种模块类型，不仅仅是 ES6 模块。</li>\n<li>Rollup 是专门为 ES6 创建的，但是处理 sourcemaps 的时候似乎有问题 —— 过几个月我会再查看一下。</li>\n<li>JSPM 建立在 npm 和 SystemJS 之上。</li>\n<li>Ember CLI 是一个专门为 Ember 用户设计的命令行工具，类似于 webpack。它底层架构使用了 Broccoli。</li>\n</ul>\n<p>你应该选用哪个打包工具呢？哪个工具最适合你呢？我最钟爱 Browserify，因为它容易上手使用，和 webpack，因为它配合 React 使用很方便。编写 ES6 模块的好处就在于你不是在编写 Browserify 或 webpack 模块 —— 你可以随时更换你的打包工具。关于使用什么打包工具这个话题，网上有太多的看法，快速搜索一下，你会发现针对每个工具都有大量的争论。</p>\n<p>如果你已经在使用 gulp、Grunt 或 npm tasks 构建任务，运行你的 JavaScript 和 CSS 代码，把模块集成到你的项目中是相当简单的事情。</p>\n<p>有许多不同的方式可以实现一个 bundler —— 你可以写一个 gulp 任务，配置一下 webpack，写一个 npm 脚本，或者直接执行命令</p>\n<p>我创建了一个仓库，详细说明了 webpack 和 Browserify 如何配合使用，还有一些样本模块供你把玩。</p>\n<h3 id=\"导入非模块化的代码\"><a href=\"#%E5%AF%BC%E5%85%A5%E9%9D%9E%E6%A8%A1%E5%9D%97%E5%8C%96%E7%9A%84%E4%BB%A3%E7%A0%81\" aria-label=\"导入非模块化的代码 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>导入非模块化的代码</h3>\n<p>如果你正在把项目代码分割成一个个模块，但是又不能一次完成，这时你就可以通过 <code class=\"language-text\">import &quot;filename&quot;</code> 语句，加载未模块化的代码。这确实不是 ES6 的功能，是你使用的打包器（ bundler ）提供的功能。</p>\n<p>This concept is no different than running concatenation on multiple .js files except that the code you import will be scoped to the importing module.\n其实就跟直接合并这些 .js 文件没什么不同， 导入的代码的作用域就是在导入该代码的模块中，</p>\n<h3 id=\"需要全局变量的代码\"><a href=\"#%E9%9C%80%E8%A6%81%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%E7%9A%84%E4%BB%A3%E7%A0%81\" aria-label=\"需要全局变量的代码 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>需要全局变量的代码</h3>\n<p>一些软件库，例如 jQuery 插件，不符合 JavaScript 模块系统。整个 jQuery 插件生态系统假定有一个名为 window.jQuery 全局变量，每一个插件都可以挂载到它上面。然而，我们刚刚知道 ES6 模块中没有全局数据。一切数据都限制在自身所在的模块当中，除非你显式地设置全局数据。</p>\n<p>为了解决这个问题，首先问问你自己是否真的需要那个插件，是否可以自己编码实现这个功能。为了脱离对 jQuery 的依赖，许多 JavaScript 插件正在被重新编写为独立的 JavaScript 模块。</p>\n<p>如果不能自己编码实现，你需要借助项目构建工具来帮助解决这个问题。可以参考 Browserify 的 <a href=\"https://github.com/thlorenz/browserify-shim\">Browserify Shim</a> 和 <a href=\"https://webpack.github.io/docs/shimming-modules.html\">webpack</a> 的一些文档。</p>\n<h3 id=\"陷阱\"><a href=\"#%E9%99%B7%E9%98%B1\" aria-label=\"陷阱 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>陷阱</h3>\n<p>当导出一个函数的时候，不要在函数的末尾添加分号。虽然许多打包工具仍然允许这种写法，但是一个良好的编程习惯是不要在函数声明的末尾添加分号，这样做是为了，当你转换打包工具的时候，不会遇到出乎意料的情况。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 错误:\nexport function yell(name) { return `HEY ${name}`; };\n// 正确:\nexport function yell(name) { return `HEY ${name}`; }</code></pre></div>\n<h3 id=\"进一步阅读\"><a href=\"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E9%98%85%E8%AF%BB\" aria-label=\"进一步阅读 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>进一步阅读</h3>\n<p>希望这是一篇介绍使用 npm 和 ES6 模块的好文章。显然还有很多关于 npm 和 ES6\n模块的知识点需要我们去学习。在我看来，最好的学习方式是开始在你的下一个项目中动手使用它们。下面我列举了一些很优秀的资源，可以帮助你学习：</p>\n<ul>\n<li><a href=\"http://exploringjs.com/\">Exploring ES6 book</a></li>\n<li><a href=\"https://github.com/ModuleLoader/es6-module-loader/wiki/Brief-Overview-of-ES6-Module-syntax\">Brief Overview of ES6 Module syntax</a></li>\n<li><a href=\"https://github.com/lukehoban/es6features#readme\">ES6 Features</a></li>\n<li><a href=\"https://github.com/rollup/rollup/wiki/ES6-modules\">ES6 Modules on Rollup’s Wiki</a></li>\n<li><a href=\"http://blog.namangoel.com/browserify-vs-webpack-js-drama\">Browserify vs webpack hot drama</a></li>\n<li><a href=\"http://www.2ality.com/2015/04/webpack-es6.html\">webpack &#x26; ES6</a></li>\n<li><a href=\"http://slides.com/kentcdodds/es6-workshop#/\">ES6 features &#x26; webpack workshop</a></li>\n</ul>","fields":{"slug":"/videos/179/"}},"allIndexJson":{"edges":[{"node":{"id":"1","title":"vim 联手 ctags 追踪代码","name":"001-ctags","created_at":"2011年12月21日"}},{"node":{"id":"2","title":"用 vim 插件 snipmate 编写代码片段","name":"002-snipmate","created_at":"2011年12月28日"}},{"node":{"id":"3","title":"在ubuntu 系统下ssh 登录服务器","name":"003-ssh","created_at":"2012年1月7日"}},{"node":{"id":"4","title":"Git 的基本配置和使用","name":"004-git-init","created_at":"2012年1月13日"}},{"node":{"id":"5","title":"Git 工作流","name":"005-git-workflow","created_at":"2012年1月15日"}},{"node":{"id":"6","title":"利用 GitHub pages 搭建自己的网站","name":"006-github-pages","created_at":"2012年1月17日"}},{"node":{"id":"7","title":"GitHub 的基本使用","name":"007-github-init","created_at":"2012年2月4日"}},{"node":{"id":"8","title":"Ubuntu 系统下的命令行使用小技巧","name":"008-drive-cli","created_at":"2012年2月12日"}},{"node":{"id":"9","title":"fuzzyfinder 文件查找","name":"009-fuzzyfinder","created_at":"2012年2月18日"}},{"node":{"id":"10","title":"如何解决 push 更改到 GitHub 却被拒绝的问题","name":"010-git-pull-rebase","created_at":"2012年2月23日"}},{"node":{"id":"11","title":"如何安装 Ubuntu 操作系统","name":"011-ubuntu-install","created_at":"2012年2月23日"}},{"node":{"id":"12","title":"如何在 GitHub 上参与他人的项目","name":"012-github-fork","created_at":"2012年3月6日"}},{"node":{"id":"13","title":"在 Vim 中折叠代码","name":"013-vim-fold","created_at":"2012年3月17日"}},{"node":{"id":"14","title":"如何把代码打包成一个 deb package","name":"014-make-deb","created_at":"2012年3月24日"}},{"node":{"id":"15","title":"如何把 deb 软件包上传到 apt 仓库中","name":"015-apt-repo","created_at":"2012年4月1日"}},{"node":{"id":"16","title":"如何利用 GitHub 管理自己的技术笔记","name":"016-take-note","created_at":"2012年4月7日"}},{"node":{"id":"17","title":"Vim 中的自动补齐功能","name":"017-vim-complete","created_at":"2012年4月15日"}},{"node":{"id":"18","title":"如何在 Ubuntu 系统中搭建 rails 开发环境","name":"018-rails-setup","created_at":"2012年4月21日"}},{"node":{"id":"19","title":"利用 LATEX 生成 PDF 文档","name":"019-latex","created_at":"2012年4月26日"}},{"node":{"id":"20","title":"如何使用 pandoc 把 markdown 文档转成 latex 格式","name":"020-pandoc","created_at":"2012年5月5日"}},{"node":{"id":"21","title":"利用 pandoc 把 markdown 转换成 html 并借助 GitHub pages 发布文档","name":"021-online-book","created_at":"2012年5月16日"}},{"node":{"id":"22","title":"通过实例讲解 Bash 脚本的基本知识 ","name":"022-bash-script-part1","created_at":"2012年5月20日"}},{"node":{"id":"23","title":"数据重定向 redirection","name":"023-redirection","created_at":"2012年5月27日"}},{"node":{"id":"24","title":"Vim 中使用 fuzzyfinder (修订版)","name":"024-fuzzyfinder-revised","created_at":"2012年6月6日"}},{"node":{"id":"25","title":"Vim 中使用 ctags 追踪代码库（修订版）","name":"025-ctags-revised","created_at":"2012年6月9日"}},{"node":{"id":"26","title":"Ack 搜索代码库并用 vim 打开具体的匹配项","name":"026-ack-grep","created_at":"2012年6月18日"}},{"node":{"id":"27","title":"Unix 系统下的字符串查找工具","name":"027-grep","created_at":"2012年6月24日"}},{"node":{"id":"28","title":"Vim 的多文件操作方式","name":"028-vim-multifiles","created_at":"2012年7月1日"}},{"node":{"id":"29","title":"如何使用 git rebase 命令","name":"029-git-rebase","created_at":"2012年7月9日"}},{"node":{"id":"30","title":"如何管理 Vim 插件","name":"030-vim-plugin-manage","created_at":"2012年7月22日"}},{"node":{"id":"31","title":"如何使用 Vim 的配置文件 .vimrc","name":"031-vimrc","created_at":"2012年7月29日"}},{"node":{"id":"32","title":"Git diff 命令的几种常用情形","name":"032-git-diff","created_at":"2012年8月6日"}},{"node":{"id":"33","title":"Git add 命令的使用","name":"033-git-add","created_at":"2012年8月13日"}},{"node":{"id":"34","title":"Git reset 命令的使用","name":"034-git-reset","created_at":"2012年8月27日"}},{"node":{"id":"35","title":"如何配置 Git","name":"035-git-config","created_at":"2012年9月2日"}},{"node":{"id":"36","title":"利用 Octopress 框架搭建自己的博客","name":"036-octopress","created_at":"2012年9月10日"}},{"node":{"id":"37","title":"如何在 GitHub 上参与别人的项目","name":"037-github-fork","created_at":"2012年9月24日"}},{"node":{"id":"38","title":"如何把 rails 项目部署到 VPS ","name":"038-rails-setup","created_at":"2012年10月1日"}},{"node":{"id":"39","title":"mysql 数据库基本使用","name":"039-mysql","created_at":"2012年10月8日"}},{"node":{"id":"40","title":"Chrome 开发者工具使用技巧","name":"040-chrome-devtools","created_at":"2012年10月15日"}},{"node":{"id":"41","title":"命令行操作神器 tmux","name":"041-tmux","created_at":"2012年10月22日"}},{"node":{"id":"42","title":"capistrano 自动化部署工具","name":"042-capistrano","created_at":"2012年10月29日"}},{"node":{"id":"43","title":"HTML5 视频播放知识分享","name":"043-html5-video","created_at":"2012年11月5日"}},{"node":{"id":"44","title":"Javascript 基础知识介绍","name":"044-javascript-start","created_at":"2012年11月12日"}},{"node":{"id":"45","title":"Web 开发经验分享","name":"045-web-start","created_at":"2012年11月19日"}},{"node":{"id":"46","title":"Unix 系统下的软件安装","name":"046-software-install","created_at":"2012年11月26日"}},{"node":{"id":"47","title":"高效使用 GitHub Issues","name":"047-github-issues","created_at":"2012年12月3日"}},{"node":{"id":"48","title":"介绍 rsync 数据同步工具","name":"048-rsync","created_at":"2012年12月10日"}},{"node":{"id":"49","title":"Git 的前端界面工具 tig","name":"049-tig","created_at":"2012年12月18日"}},{"node":{"id":"50","title":"介绍 rails route 和 MVC 的基本原理","name":"050-rails-start","created_at":"2012年12月25日"}},{"node":{"id":"51","title":"介绍 rails routing 相关内容","name":"051-rails-routing","created_at":"2012年12月31日"}},{"node":{"id":"52","title":"rails controller 的基本使用","name":"052-rails-controller","created_at":"2013年1月7日"}},{"node":{"id":"53","title":"rails 的 action view 的使用技巧","name":"053-rails-view","created_at":"2013年1月14日"}},{"node":{"id":"54","title":"介绍 rails model 的基本使用","name":"054-rails-model","created_at":"2013年1月28日"}},{"node":{"id":"55","title":"Apache 服务器的基本使用技巧","name":"055-apache","created_at":"2013年2月4日"}},{"node":{"id":"56","title":"如何在 vim 中高效开发 rails","name":"056-vim-rails","created_at":"2013年3月4日"}},{"node":{"id":"57","title":"讨论用 rspec + capybara 的方式做 rails 项目测试","name":"057-rails-test","created_at":"2013年3月11日"}},{"node":{"id":"58","title":"介绍 GitHub 的 network 图","name":"058-github-network","created_at":"2013年3月18日"}},{"node":{"id":"59","title":"Git 分布式版本控制流程","name":"059-distribution-change-life","created_at":"2013年3月25日"}},{"node":{"id":"60","title":"Github 的 Pull Request 过程的图示解说","name":"060-pull-request","created_at":"2013年4月1日"}},{"node":{"id":"61","title":"Vim 的 snipmate 插件的使用（修订版）","name":"061-snipmate","created_at":"2013年4月7日"}},{"node":{"id":"62","title":"介绍 ssh 的日常使用","name":"062-ssh","created_at":"2013年4月15日"}},{"node":{"id":"63","title":"网站如何使用 sendmail 发送邮件","name":"063-sendmail","created_at":"2013年4月22日"}},{"node":{"id":"64","title":"如何在 Vim 中使用 ctrlp","name":"064-ctrlp","created_at":"2013年4月29日"}},{"node":{"id":"65","title":"rails 环境搭建","name":"065-rails-setup","created_at":"2013年5月7日"}},{"node":{"id":"66","title":"介绍 AJAX 技术在 rails 项目中的应用","name":"066-rails-ajax","created_at":"2013年5月13日"}},{"node":{"id":"67","title":"如何为自己的网站添加 Google Analytics","name":"067-google-analytics","created_at":"2013年5月20日"}},{"node":{"id":"68","title":"rails 国际化 i18n","name":"068-rails-i18n","created_at":"2013年5月27日"}},{"node":{"id":"69","title":"介绍 Github 的 kss 工具","name":"069-kss","created_at":"2013年6月3日"}},{"node":{"id":"70","title":"通过 weibo_2 调用新浪微博 API","name":"070-kiss-weibo","created_at":"2013年6月17日"}},{"node":{"id":"71","title":"如何在 Ubuntu 下安装使用 ffmpeg","name":"071-ffmpeg","created_at":"2013年6月23日"}},{"node":{"id":"72","title":"如何使用 sunspot 实现站内搜索","name":"072-search","created_at":"2013年7月1日"}},{"node":{"id":"73","title":"如何在 rails 和 sass 环境下组织 css 代码","name":"073-css-organization","created_at":"2013年7月15日"}},{"node":{"id":"74","title":"rails 项目中实现站内通知","name":"074-on-site-notification","created_at":"2013年7月22日"}},{"node":{"id":"75","title":"如何使用 rbenv 管理 ruby 版本","name":"075-rbenv","created_at":"2013年7月29日"}},{"node":{"id":"76","title":"借助 atwho 和 jquery-hotkeys 实现智能的评论框","name":"076-smart-comment-box","created_at":"2013年8月5日"}},{"node":{"id":"77","title":"如何在网站中集成支付宝收款","name":"077-alipay","created_at":"2013年8月12日"}},{"node":{"id":"78","title":"如何把 happycasts 部署到服务器上","name":"078-happycasts-deploy","created_at":"2013年8月26日"}},{"node":{"id":"79","title":"rails 生态系统","name":"079-rails-ecosystem","created_at":"2013年9月9日"}},{"node":{"id":"80","title":"网站文字排版的技巧","name":"080-typography","created_at":"2013年9月16日"}},{"node":{"id":"81","title":"介绍如何备份我们站点的 mysql 数据库","name":"081-mysql-backup","created_at":"2013年10月14日"}},{"node":{"id":"82","title":"如何让网页中的内容美观的滑动展示","name":"082-slideshow","created_at":"2013年10月21日"}},{"node":{"id":"83","title":"带你领略 codepen 的风采","name":"083-codepen","created_at":"2013年11月11日"}},{"node":{"id":"84","title":"如何实现 rails 项目中的注册登陆模块","name":"084-rails-signup","created_at":"2013年11月25日"}},{"node":{"id":"85","title":"sublime 编辑器的使用","name":"085-sublime-warmup","created_at":"2013年12月2日"}},{"node":{"id":"86","title":"如何能在公网上访问你的网站","name":"086-get-it-live","created_at":"2013年12月9日"}},{"node":{"id":"87","title":"使用 imagemagick 和 gimp 编辑图片","name":"087-image-manipulation","created_at":"2013年12月23日"}},{"node":{"id":"88","title":"如何采用 screenflow 录制视频","name":"088-make-screencast","created_at":"2013年12月30日"}},{"node":{"id":"89","title":"如何使用 resque 处理异步任务","name":"089-resque","created_at":"2014年1月13日"}},{"node":{"id":"90","title":"如何制作一个可以隐藏的抽屉式的导航栏","name":"090-hidden-navbar","created_at":"2014年2月5日"}},{"node":{"id":"91","title":"如何在 Ubuntu 系统中自动执行任务","name":"091-cron","created_at":"2014年2月16日"}},{"node":{"id":"92","title":"如何利用 Git 辅助本地项目开发","name":"092-small-commits-please","created_at":"2014年3月3日"}},{"node":{"id":"93","title":"介绍加密货币--比特币。","name":"093-get-bitcoin","created_at":"2014年3月17日"}},{"node":{"id":"94","title":"如何制作出输入框的自动补全功能","name":"094-jquery-autocomplete","created_at":"2014年4月1日"}},{"node":{"id":"95","title":"演示如何使用 nvd3 制作 svg 图表","name":"095-nvd3","created_at":"2014年4月7日"}},{"node":{"id":"96","title":"从技术角度介绍比特币","name":"096-bitcoin-talk","created_at":"2014年4月7日"}},{"node":{"id":"97","title":"使用 togetherjs 为网站添加炫酷的实时协作功能","name":"097-togetherjs","created_at":"2014年4月27日"}},{"node":{"id":"98","title":"如何用 linkedin 账号登录网站","name":"098-login-with-linkedin","created_at":"2014年5月5日"}},{"node":{"id":"99","title":"如何使用 socket.io 实现实时协作编辑","name":"099-coedit","created_at":"2014年7月7日"}},{"node":{"id":"100","title":"利用 Devise 实现用户认证","name":"100-devise","created_at":"2014年7月23日"}},{"node":{"id":"101","title":"介绍 rabbitmq 的使用","name":"101-rabbitmq","created_at":"2014年8月4日"}},{"node":{"id":"102","title":"Rails4 中的 strong parameter","name":"102-strong-parameter","created_at":"2014年8月11日"}},{"node":{"id":"103","title":"如何定制 Mac iTerm 和 oh-my-zsh 的使用","name":"103-mac-term","created_at":"2014年9月21日"}},{"node":{"id":"104","title":"Ubuntu 系统中为 Rails 项目集成 Elasticsearch 搜索功能","name":"104-elasticsearch","created_at":"2014年9月30日"}},{"node":{"id":"105","title":"如何使用 vagrant 搭建开发环境","name":"105-vagrant","created_at":"2014年10月19日"}},{"node":{"id":"106","title":"如何成为一名程序员","name":"106-coder-howto","created_at":"2014年10月26日"}},{"node":{"id":"107","title":"如何把评论框 ajax 化","name":"107-comment-ajax","created_at":"2014年12月1日"}},{"node":{"id":"108","title":"rails 学习资料分享","name":"108-learn-rails","created_at":"2014年12月15日"}},{"node":{"id":"109","title":"翻译 wikipedia 上的动画","name":"109-open-source-lego","created_at":"2014年12月22日"}},{"node":{"id":"110","title":"rails4 应用中实现用户注册登陆功能","name":"110-signup","created_at":"2015年1月5日"}},{"node":{"id":"111","title":"Sublime 编辑器开发 Rails 的技巧分享","name":"111-sublime-rails","created_at":"2015年2月9日"}},{"node":{"id":"112","title":"讨论一下学习编程的方法","name":"112-learn-with-projects","created_at":"2015年3月2日"}},{"node":{"id":"113","title":"使用 Jekyll 快速搭建优秀的网站","name":"113-github-pages","created_at":"2015年3月16日"}},{"node":{"id":"114","title":"翻译 Scott Chacon 的 2008 年 Git 演讲（-）","name":"114-getting-git-part1","created_at":"2015年3月30日"}},{"node":{"id":"115","title":"翻译 Scott Chacon 的 2008 年 Git 演讲（二）","name":"115-getting-git-part2","created_at":"2015年4月6日"}},{"node":{"id":"116","title":"翻译 Scott Chacon 的 2008 年 Git 演讲（三）","name":"116-getting-git-part3","created_at":"2015年4月13日"}},{"node":{"id":"117","title":"翻译 Scott Chacon 的 2008 年 Git 演讲（四）","name":"117-getting-git-part4","created_at":"2015年4月27日"}},{"node":{"id":"118","title":"介绍如何安装 Chrome 浏览器","name":"118-install-chrome-first-html","created_at":"2015年5月11日"}},{"node":{"id":"119","title":"什么是 CSS","name":"119-use-css","created_at":"2015年5月17日"}},{"node":{"id":"120","title":"了解 HTML 块级元素和行内元素的区别","name":"120-block-inline","created_at":"2015年5月18日"}},{"node":{"id":"121","title":"演员集体身家最高的宣传片","name":"121-codeorg","created_at":"2015年6月3日"}},{"node":{"id":"122","title":"理解 CSS 中的“盒子模型”","name":"122-box-model","created_at":"2015年6月9日"}},{"node":{"id":"123","title":"HTML 属性 class 和 id 各自用法","name":"123-class-id","created_at":"2015年6月9日"}},{"node":{"id":"124","title":"注册 github 账号托管页面","name":"124-hello-github-pages","created_at":"2015年6月25日"}},{"node":{"id":"125","title":"如何让一个块元素水平居中","name":"125-center-a-block","created_at":"2015年6月25日"}},{"node":{"id":"126","title":"什么是浮动和如何清除浮动","name":"126-float-clear","created_at":"2015年6月25日"}},{"node":{"id":"127","title":"用 clearfix 清除浮动","name":"127-clearfix","created_at":"2015年6月26日"}},{"node":{"id":"128","title":"如何学习繁多的 CSS 属性","name":"128-learn-css-attributes","created_at":"2015年6月26日"}},{"node":{"id":"129","title":"如何申请服务器","name":"129-buy-vps-aliyun","created_at":"2015年6月26日"}},{"node":{"id":"130","title":"如何配置 nginx 服务器","name":"130-ubuntu-nginx","created_at":"2015年6月26日"}},{"node":{"id":"131","title":"如何为网站绑定域名","name":"131-bind-domain","created_at":"2015年6月26日"}},{"node":{"id":"132","title":"读懂英文文档","name":"132-read-doc-in-english","created_at":"2015年6月26日"}},{"node":{"id":"133","title":"燕大4月16日聚会情况及谈心","name":"133-talk-04-17-first","created_at":"2015年6月26日"}},{"node":{"id":"134","title":"如何在网页中任意摆放一个元素","name":"134-position","created_at":"2015年6月26日"}},{"node":{"id":"135","title":"如何使用 font-awesome “字体图标”","name":"135-font-icon","created_at":"2015年6月26日"}},{"node":{"id":"136","title":"使用 GitHub 的 Mac 客户端","name":"136-github-client","created_at":"2015年6月26日"}},{"node":{"id":"137","title":"博客页面排版","name":"137-ziti","created_at":"2015年6月26日"}},{"node":{"id":"138","title":"博客图片样式","name":"138-max-width","created_at":"2015年6月26日"}},{"node":{"id":"139","title":"固定位置的 header","name":"139-position-fixed","created_at":"2015年6月26日"}},{"node":{"id":"140","title":"如何给首页添加大背景图","name":"140-background","created_at":"2015年6月26日"}},{"node":{"id":"141","title":"CSS 样式的优先级","name":"141-specificity","created_at":"2015年6月26日"}},{"node":{"id":"142","title":"添加水平导航栏","name":"142-navbar","created_at":"2015年6月26日"}},{"node":{"id":"143","title":"带图片的博客列表","name":"143-post-list","created_at":"2015年6月26日"}},{"node":{"id":"144","title":"添加让人舒适的过渡效果","name":"144-transition","created_at":"2015年6月26日"}},{"node":{"id":"145","title":"如何重构 CSS 代码","name":"145-z-index","created_at":"2015年6月26日"}},{"node":{"id":"146","title":"如何去掉页面缩小后出现的白边","name":"146-max-min","created_at":"2015年6月26日"}},{"node":{"id":"147","title":"为网页添加 footer","name":"147-css-reuse","created_at":"2015年6月26日"}},{"node":{"id":"148","title":"谈谈对切图的认识","name":"148-qietu-dead","created_at":"2015年6月26日"}},{"node":{"id":"149","title":"如何使用布局文件","name":"149-layout","created_at":"2015年6月26日"}},{"node":{"id":"150","title":"用 GitCafe 托管页面","name":"150-gitcafe","created_at":"2015年6月26日"}},{"node":{"id":"151","title":"如何使用 markdown","name":"151-markdown","created_at":"2015年6月26日"}},{"node":{"id":"152","title":"如何使用 Jekyll 框架来自动加载布局文件","name":"152-jekyll-layout","created_at":"2015年6月26日"}},{"node":{"id":"153","title":"添加 about 页面","name":"153-about","created_at":"2015年6月26日"}},{"node":{"id":"154","title":"响应式设计简介","name":"154-why-responsive","created_at":"2015年6月26日"}},{"node":{"id":"155","title":"如何制作 favicon 小图标","name":"155-favicon","created_at":"2015年6月26日"}},{"node":{"id":"156","title":"如何设置 viewport 取消手机的自动缩放","name":"156-viewport","created_at":"2015年6月26日"}},{"node":{"id":"157","title":"介绍 CSS 的 media query","name":"157-media-query","created_at":"2015年6月26日"}},{"node":{"id":"158","title":"如何把首页变成 responsive 的","name":"158-responsive-homepage","created_at":"2015年6月26日"}},{"node":{"id":"159","title":"gitcafe 上托管网页的另一种形式","name":"159-gitcafe-project-page","created_at":"2015年6月26日"}},{"node":{"id":"160","title":"如何添加 ssh key 到 gitcafe","name":"160-gitcafe-sshkey","created_at":"2015年6月26日"}},{"node":{"id":"161","title":"如何切图","name":"161-img-out","created_at":"2015年6月26日"}},{"node":{"id":"162","title":"如何获得固定尺寸的图片","name":"162-set-img-size","created_at":"2015年6月26日"}},{"node":{"id":"163","title":"Gulp+Sass+Jekyll+Browsersync 搭建起来的前端开发环境","name":"163-gulp-jekyll","created_at":"2015年7月31日"}},{"node":{"id":"164","title":"和 Facebook 的 Reactjs 在一起的第一天","name":"164-react-start","created_at":"2015年8月7日"}},{"node":{"id":"165","title":"当 React 遇见 Gulp 和 Browserify","name":"165-react-browserify","created_at":"2015年8月8日"}},{"node":{"id":"166","title":"从两个恼人问题的解决来看 clearfix","name":"166-clearfix-in-detail","created_at":"2015年8月25日"}},{"node":{"id":"167","title":"理解 CSS 长度单位","name":"167-css-length","created_at":"2015年10月19日"}},{"node":{"id":"168","title":"有字库精美中文字体","name":"168-youziku","created_at":"2015年10月25日"}},{"node":{"id":"169","title":"再见 Rails","name":"169-bye-rails","created_at":"2015年10月30日"}},{"node":{"id":"170","title":"单页面应用 SPA","name":"170-spa","created_at":"2015年11月6日"}},{"node":{"id":"171","title":"解释 HTML5 给程序员听","name":"171-h5","created_at":"2015年11月21日"}},{"node":{"id":"172","title":"注册 Github","name":"172-github-signup","created_at":"2015年11月21日"}},{"node":{"id":"173","title":"拥有个人网站","name":"173-github-new-repo","created_at":"2015年11月22日"}},{"node":{"id":"174","title":"HTML5 入手第一天","name":"174-h5-tags","created_at":"2015年11月22日"}},{"node":{"id":"175","title":"代码如画笔，百日百页面","name":"175-100-pages","created_at":"2015年11月23日"}},{"node":{"id":"176","title":"CSS3 圆角阴影","name":"176-css3-start","created_at":"2015年11月23日"}},{"node":{"id":"177","title":"transition 过渡效果","name":"177-transition","created_at":"2015年11月30日"}},{"node":{"id":"178","title":"gulp 构建系统","name":"178-gulp","created_at":"2015年12月8日"}},{"node":{"id":"179","title":"使用 npm 和 ES6 模块进行前端开发","name":"179-npm-es6","created_at":"2015年12月20日"}},{"node":{"id":"180","title":"我为何以全部身家押宝 meteor+react ?","name":"180-why-meteor-react","created_at":"2016年1月9日"}},{"node":{"id":"181","title":"React 优于 jQuery 的地方","name":"181-react-bad-jquery","created_at":"2016年1月29日"}},{"node":{"id":"182","title":"为何最爱 Meteor + React ？","name":"182-why-meteor-react","created_at":"2016年2月4日"}},{"node":{"id":"183","title":"厂商前缀是神马？","name":"183-vendor-prefix","created_at":"2016年2月5日"}},{"node":{"id":"184","title":"Sass 的三大功能","name":"184-sass","created_at":"2016年2月6日"}},{"node":{"id":"185","title":"CSS 将死","name":"185-css-to-die","created_at":"2016年3月1日"}},{"node":{"id":"186","title":"编辑器之战","name":"186-editor-war","created_at":"2016年3月12日"}},{"node":{"id":"187","title":"React 大战 Angular2","name":"187-react-vs-angular","created_at":"2016年3月22日"}},{"node":{"id":"188","title":"React 牵手 Meteor 个人生产力革命（第一部分）","name":"188-meteor-react-win-p1","created_at":"2016年4月3日"}},{"node":{"id":"189","title":"React 牵手 Meteor 个人生产力革命（第二部分）","name":"189-meteor-react-win-p2","created_at":"2016年4月3日"}},{"node":{"id":"190","title":"Meteor-React 学习资料和陷阱","name":"190-meteor-react-guide","created_at":"2016年4月5日"}},{"node":{"id":"191","title":"摩登概念白话问答（第一部分）","name":"191-modern-dev-qa-p1","created_at":"2016年4月6日"}},{"node":{"id":"192","title":"摩登概念白话问答（第二部分）","name":"192-modern-dev-qa-p2","created_at":"2016年4月6日"}},{"node":{"id":"193","title":"Pete Hunt 讲 React 的 State 哲学","name":"193-pete-hunt-state","created_at":"2016年4月8日"}},{"node":{"id":"194","title":"PS 技巧：实用图片剪裁技巧","name":"194-ps-image-sizing","created_at":"2016年4月15日"}},{"node":{"id":"195","title":"Peter 自己的原始组件思想","name":"195-my-component-idea","created_at":"2016年4月15日"}},{"node":{"id":"196","title":"摩登前端开发者早期简介","name":"196-old-modern-intro","created_at":"2016年4月15日"}},{"node":{"id":"197","title":"什么是 Ajax ？","name":"197-ajax-intro","created_at":"2016年5月30日"}},{"node":{"id":"198","title":"Keycastr 显示按键","name":"198-keycastr","created_at":"2016年6月18日"}},{"node":{"id":"199","title":"Node.js 上传图片","name":"199-upload-image","created_at":"2016年7月8日"}},{"node":{"id":"200","title":"CSS 字体设置 font","name":"200-font","created_at":"2016年9月8日"}},{"node":{"id":"201","title":"什么是面向对象编程？","name":"201-oop","created_at":"2016年9月20日"}},{"node":{"id":"202","title":"到 godaddy 上设置 dns 域名指向","name":"202-dns","created_at":"2016年10月23日"}},{"node":{"id":"203","title":"使用 PM2 部署 Nodejs 项目","name":"203-pm2","created_at":"2016年12月4日"}},{"node":{"id":"204","title":"2016年底我的 ES6 使用情况","name":"204-es6","created_at":"2016年12月19日"}},{"node":{"id":"205","title":"ES6 的 Promise 对象（第一部分）","name":"205-promise","created_at":"2017年1月6日"}},{"node":{"id":"206","title":"ES6 的 Promise 对象（第二部分）","name":"206-promise-again","created_at":"2017年1月7日"}},{"node":{"id":"207","title":"ES6 的 let 和 ES5 的 var 有啥区别？","name":"207-let-var","created_at":"2017年2月3日"}},{"node":{"id":"208","title":"如何在微信公众号中使用 Markdown？","name":"208-weixin-markdown","created_at":"2017年2月4日"}},{"node":{"id":"209","title":"ES6 模块的最基本的使用方式是什么？","name":"209-module","created_at":"2017年2月5日"}},{"node":{"id":"210","title":"JS 的数组 map 函数怎么用？","name":"210-map","created_at":"2017年2月6日"}},{"node":{"id":"211","title":" ES6 的箭头函数对 this 处理有什么好处？","name":"211-arrow","created_at":"2017年2月7日"}},{"node":{"id":"212","title":"ES6 模板字符串优势何在？","name":"212-str","created_at":"2017年2月8日"}},{"node":{"id":"213","title":"ES6 ，Stage0 和 ES2017 都是啥意思捏？","name":"213-es6","created_at":"2017年2月9日"}},{"node":{"id":"214","title":"好奇猫工作室要做什么？","name":"214-lab","created_at":"2017年2月10日"}},{"node":{"id":"215","title":"如何最快速的拥有自己的博客？","name":"215-blog","created_at":"2017年2月11日"}},{"node":{"id":"216","title":"ES6 模块的两种导出方式是什么？","name":"216-module-2","created_at":"2017年2月12日"}},{"node":{"id":"217","title":"如何用 Webpack+Babel 来编译 ES6 ?","name":"217-webpack","created_at":"2017年2月13日"}},{"node":{"id":"218","title":"什么是谷歌的材料设计?","name":"218-material","created_at":"2017年2月14日"}},{"node":{"id":"219","title":"工程师如何做设计?","name":"219-design-how","created_at":"2017年2月15日"}},{"node":{"id":"220","title":"如何部署一个静态网站到 aliyun+ubuntu+nginx 环境？","name":"220-deploy","created_at":"2017年2月16日"}},{"node":{"id":"221","title":"材料设计的色盘如何使用？","name":"221-color","created_at":"2017年2月17日"}},{"node":{"id":"222","title":"百度的 echarts 好用么？","name":"222-echarts","created_at":"2017年2月18日"}},{"node":{"id":"223","title":"如何做出自己的 echarts ？","name":"223-echarts","created_at":"2017年2月19日"}},{"node":{"id":"224","title":"如何做出自己的 echarts ？(第二部分)","name":"224-echarts-again","created_at":"2017年2月20日"}},{"node":{"id":"225","title":"好奇猫工作室的三个主要业务方向是什么？","name":"225-do-what","created_at":"2017年2月21日"}},{"node":{"id":"226","title":"如何用 Sketch 把一个普通的 png 变成 SVG ？","name":"226-svg","created_at":"2017年2月24日"}},{"node":{"id":"227","title":"如何用 Sketch 画出好奇猫 logo ？","name":"227-draw","created_at":"2017年2月25日"}},{"node":{"id":"228","title":"如何用 sketch 把图片剪裁成特定尺寸？","name":"228-img","created_at":"2017年2月26日"}},{"node":{"id":"229","title":"如何把 sketch 中的图片导出给开发者？","name":"229-export","created_at":"2017年2月27日"}},{"node":{"id":"230","title":"如何理解 redux 的单向数据流？","name":"230-redux","created_at":"2017年4月11日"}},{"node":{"id":"231","title":"如何使用 Gitbook 来做笔记？","name":"231-gitbook","created_at":"2017年6月2日"}},{"node":{"id":"232","title":"如何部署用 create-react-app 创建的项目？","name":"232-create-react-app","created_at":"2017年6月22日"}},{"node":{"id":"233","title":"如何免费部署项目到 now.sh 和野狗？","name":"233-now-wild","created_at":"2017年7月10日"}},{"node":{"id":"234","title":"如何用 react + 野狗 实现聊天室？","name":"234-wild-chat","created_at":"2017年7月13日"}},{"node":{"id":"235","title":"如何用 react 制作选项卡效果？","name":"235-tabs","created_at":"2017年8月11日"}},{"node":{"id":"236","title":"何为展示组件和容器组件？","name":"236-dan","created_at":"2017年8月23日"}},{"node":{"id":"237","title":"如何用 redux-saga 实现异步请求？","name":"237-saga","created_at":"2017年12月21日"}},{"node":{"id":"238","title":"如何用函数式编程思路实现数组筛选？","name":"238-filter","created_at":"2017年12月31日"}},{"node":{"id":"239","title":"如何用 generator 实现异步操作？","name":"239-generator","created_at":"2018年1月1日"}},{"node":{"id":"240","title":"如何使用数组的 reduce 方法？","name":"240-reduce","created_at":"2018年1月2日"}},{"node":{"id":"241","title":"如何使用数组的 map 方法？","name":"241-map","created_at":"2018年1月22日"}},{"node":{"id":"242","title":"如何搭建 IE 测试环境？","name":"242-ie","created_at":"2018年4月13日"}},{"node":{"id":"243","title":"比特币第一课","name":"243-coin","created_at":"2018年7月23日"}},{"node":{"id":"244","title":"什么是 DApp ？","name":"av32372347","created_at":"2018-09-04"}},{"node":{"id":"245","title":"什么是 Nervos ？","name":"av32475946","created_at":"2018-09-05"}},{"node":{"id":"246","title":"智能合约入门","name":"av32476063","created_at":"2018-09-06"}},{"node":{"id":"247","title":"合约编程语言 Solidity","name":"av32476109","created_at":"2018-09-07"}},{"node":{"id":"248","title":"HTTP 请求和 JSON-RPC","name":"av32476177","created_at":"2018-09-08"}},{"node":{"id":"249","title":"什么是加密货币钱包？","name":"av32530740","created_at":"2018-09-09"}},{"node":{"id":"250","title":"Nervos AppChain 申请测试链代币","name":"av32530826","created_at":"2018-09-10"}},{"node":{"id":"251","title":"Nervos AppChain 部署智能合约 part1","name":"av32530899","created_at":"2018-09-11"}},{"node":{"id":"252","title":"Nervos AppChain 部署智能合约 part2","name":"av32531067","created_at":"2018-09-12"}},{"node":{"id":"253","title":"技术写作三步走","name":null,"created_at":"2018-09-13"}},{"node":{"id":"254","title":"Nervos AppChain 与合约交互","name":"av32531356","created_at":"2018-09-15"}},{"node":{"id":"255","title":"以太坊的 Gas 机制","name":"av32531510","created_at":"2018-09-16"}},{"node":{"id":"256","title":"基于 React 开发 DApp","name":"av32531648","created_at":"2018-09-17"}},{"node":{"id":"257","title":"Neuron 钱包作为 DApp 的运行环境","name":"av32531808","created_at":"2018-09-18"}},{"node":{"id":"258","title":"Nervos 永恒的初次 DApp 课程简介","name":"av32333562","created_at":"2018-09-19"}},{"node":{"id":"259","title":"Alogia 的算法会取代 POW 吗？","name":null,"created_at":"2018-09-20"}},{"node":{"id":"260","title":"Naval 聊复利","name":null,"created_at":"2018-09-21"}},{"node":{"id":"261","title":"加密货币背后的密码学之 Merkle Tree","name":null,"created_at":"2018-09-22"}},{"node":{"id":"262","title":"论区块链第二层方案的合理性","name":null,"created_at":"2018-09-23"}},{"node":{"id":"263","title":"加密通信","name":null,"created_at":"2018-09-24"}},{"node":{"id":"264","title":"数字签名","name":null,"created_at":"2018-09-25"}},{"node":{"id":"265","title":"数字证书","name":null,"created_at":"2018-09-26"}},{"node":{"id":"266","title":"哈希算法","name":null,"created_at":"2018-09-27"}},{"node":{"id":"267","title":"什么是密码学","name":null,"created_at":"2018-09-28"}},{"node":{"id":"268","title":"密码朋克运动","name":null,"created_at":"2018-09-29"}},{"node":{"id":"269","title":"公钥密码学","name":null,"created_at":"2018-09-30"}},{"node":{"id":"270","title":"RSA 算法--基本原理篇","name":null,"created_at":"2018-10-01"}},{"node":{"id":"271","title":"RSA 算法--粗略数学推导篇","name":null,"created_at":"2018-10-02"}},{"node":{"id":"272","title":"椭圆曲线密码学简介","name":null,"created_at":"2018-10-04"}},{"node":{"id":"273","title":"《区块链背后的密码学》课程介绍","name":null,"created_at":"2018-10-05"}},{"node":{"id":"274","title":"简单支付验证 SPV","name":null,"created_at":"2018-10-06"}},{"node":{"id":"275","title":"POS 权益证明","name":null,"created_at":"2018-10-07"}},{"node":{"id":"276","title":"区块链和社会自动化","name":null,"created_at":"2018-10-08"}},{"node":{"id":"277","title":"Peter 的马拉松入门心法","name":null,"created_at":"2018-10-10"}},{"node":{"id":"278","title":"区块链上的随机数","name":null,"created_at":"2018-10-12"}},{"node":{"id":"279","title":"隔离见证 Segwit","name":null,"created_at":"2018-10-13"}},{"node":{"id":"280","title":"信任自动化系统 CITA 简介","name":null,"created_at":"2018-10-17"}},{"node":{"id":"281","title":"不可替代代币 NFT","name":null,"created_at":"2018-10-21"}},{"node":{"id":"282","title":"什么是状态机？","name":null,"created_at":"2018-10-23"}},{"node":{"id":"283","title":"浏览器中使用 Github","name":null,"created_at":"2018-10-24"}},{"node":{"id":"284","title":"React 开发环境剖析","name":null,"created_at":"2018-10-26"}},{"node":{"id":"285","title":"什么是 Nodejs ?","name":null,"created_at":"2018-10-27"}},{"node":{"id":"286","title":"使用 nvm 安装 Nodejs","name":null,"created_at":"2018-10-29"}},{"node":{"id":"287","title":"世界上最大的可复用代码库 npm","name":null,"created_at":"2018-10-30"}},{"node":{"id":"288","title":"使用 Create-react-app 创建 React 开发环境","name":null,"created_at":"2018-10-31"}},{"node":{"id":"289","title":"2018年10月份 Peter 工作汇报","name":null,"created_at":"2018-11-01"}},{"node":{"id":"290","title":"密码学的三个误解","name":null,"created_at":"2018-11-02"}},{"node":{"id":"291","title":"Peter 2018 书单","name":null,"created_at":"2018-11-03"}},{"node":{"id":"292","title":"密码学者的未来世界拼图","name":null,"created_at":"2018-11-04"}},{"node":{"id":"293","title":"React 的 JSX 语法简介","name":null,"created_at":"2018-11-05"}},{"node":{"id":"294","title":"React 的组件化思维","name":null,"created_at":"2018-11-06"}},{"node":{"id":"295","title":"React 的组件状态","name":null,"created_at":"2018-11-07"}},{"node":{"id":"296","title":"什么是 Geek","name":null,"created_at":"2018-11-07"}},{"node":{"id":"297","title":"React 事件处理","name":null,"created_at":"2018-11-08"}},{"node":{"id":"298","title":"React 条件渲染","name":null,"created_at":"2018-11-09"}},{"node":{"id":"299","title":"UTXO 未消费交易输出","name":null,"created_at":"2018-11-10"}},{"node":{"id":"300","title":"React 中显示一个 List","name":null,"created_at":"2018-11-11"}},{"node":{"id":"301","title":"React 表单","name":null,"created_at":"2018-11-11"}},{"node":{"id":"302","title":"《React 破冰之旅》课程简介","name":null,"created_at":"2018-11-12"}},{"node":{"id":"303","title":"侧链","name":null,"created_at":"2018-11-13"}},{"node":{"id":"304","title":"比特币的时间戳服务器","name":null,"created_at":"2018-11-14"}},{"node":{"id":"305","title":"V 神说加密经济学","name":null,"created_at":"2018-11-15"}},{"node":{"id":"306","title":"公信数据","name":null,"created_at":"2018-11-17"}},{"node":{"id":"307","title":"V 神说以太坊","name":null,"created_at":"2018-11-18"}},{"node":{"id":"308","title":"Nervos 助力加密经济","name":null,"created_at":"2018-11-19"}},{"node":{"id":"309","title":"端到端加密是一种生活方式","name":null,"created_at":"2018-11-20"}},{"node":{"id":"310","title":"加密共识","name":null,"created_at":"2018-11-22"}},{"node":{"id":"311","title":"以太坊 Plasma","name":null,"created_at":"2018-11-23"}},{"node":{"id":"312","title":"加密经济的三个支柱","name":null,"created_at":"2018-11-24"}},{"node":{"id":"313","title":"P2P 架构的 Web","name":null,"created_at":"2018-11-25"}},{"node":{"id":"314","title":"开源传奇","name":null,"created_at":"2018-11-26"}},{"node":{"id":"315","title":"尼克萨博说智能合约","name":null,"created_at":"2018-11-27"}},{"node":{"id":"316","title":"开源往事之 Linux 崛起","name":null,"created_at":"2018-11-28"}},{"node":{"id":"317","title":"什么是开源?","name":null,"created_at":"2018-11-29"}},{"node":{"id":"318","title":"如何为自己的 Github 项目选择 License?","name":null,"created_at":"2018-11-30"}},{"node":{"id":"319","title":"开源文化中的 fork 是啥意思?","name":null,"created_at":"2018-12-01"}},{"node":{"id":"320","title":"2018年11月份 Peter 工作汇报","name":null,"created_at":"2018-12-02"}},{"node":{"id":"321","title":"P2P 网络","name":null,"created_at":"2018-12-03"}},{"node":{"id":"322","title":"Hello Rust","name":null,"created_at":"2018-12-04"}},{"node":{"id":"323","title":"Ubuntu1604 系统上编译 Nervos ckb","name":null,"created_at":"2018-12-05"}},{"node":{"id":"324","title":"通过 ruby sdk 操作 ckb","name":null,"created_at":"2018-12-06"}},{"node":{"id":"325","title":"编程语言的分类","name":null,"created_at":"2018-12-07"}},{"node":{"id":"326","title":"实用拜占庭容错算法 pBFT","name":null,"created_at":"2018-12-08"}},{"node":{"id":"327","title":"两军问题","name":null,"created_at":"2018-12-09"}},{"node":{"id":"328","title":"分布式自治组织 DAO","name":null,"created_at":"2018-12-10"}},{"node":{"id":"329","title":"维基经济学 Wikinomics","name":null,"created_at":"2018-12-11"}},{"node":{"id":"330","title":"Peter 眼中的自由","name":null,"created_at":"2018-12-12"}},{"node":{"id":"331","title":"有向无环图 DAG ","name":null,"created_at":"2018-12-12"}},{"node":{"id":"332","title":"五年经历一个信仰","name":null,"created_at":"2018-12-13"}},{"node":{"id":"333","title":"Token 代币","name":null,"created_at":"2018-12-14"}},{"node":{"id":"334","title":"IPFS 和 Filecoin","name":null,"created_at":"2018-12-14"}},{"node":{"id":"335","title":"肉数桥梁 POW","name":null,"created_at":"2018-12-15"}},{"node":{"id":"336","title":"戴维的 B-money","name":null,"created_at":"2018-12-16"}},{"node":{"id":"337","title":"加密货币简史","name":null,"created_at":"2018-12-17"}},{"node":{"id":"338","title":"比特币的交易是如何工作的","name":null,"created_at":"2018-12-19"}},{"node":{"id":"339","title":"什么是比特币 Bitcoin ？","name":null,"created_at":"2018-12-21"}},{"node":{"id":"340","title":"什么是非对称加密？","name":null,"created_at":"2018-12-23"}},{"node":{"id":"341","title":"Proof of Authority","name":null,"created_at":"2018-12-25"}},{"node":{"id":"342","title":"指令集架构 RISC-V 简介","name":null,"created_at":"2018-12-27"}},{"node":{"id":"343","title":"A Gentle Intro to RISC-V","name":null,"created_at":"2018-12-27"}},{"node":{"id":"344","title":"What is VM?","name":null,"created_at":"2018-12-29"}},{"node":{"id":"345","title":"My Happy 2018","name":null,"created_at":"2018-12-30"}},{"node":{"id":"346","title":"快乐的 2018","name":null,"created_at":"2018-12-31"}},{"node":{"id":"347","title":"My 2019 Predictions","name":null,"created_at":"2019-01-01"}},{"node":{"id":"348","title":"Payment Channels","name":null,"created_at":"2019-01-02"}},{"node":{"id":"349","title":"Peter Report December 2018","name":null,"created_at":"2019-01-03"}},{"node":{"id":"350","title":"比特币发行总量的精确计算","name":null,"created_at":"2019-01-05"}},{"node":{"id":"351","title":"交易延展性","name":null,"created_at":"2019-01-06"}},{"node":{"id":"352","title":"如何生成比特币地址和私钥","name":null,"created_at":"2019-01-07"}},{"node":{"id":"353","title":"椭圆曲线加密的数学原理","name":null,"created_at":"2019-01-08"}},{"node":{"id":"354","title":"椭圆曲线签名算法 ECDSA","name":null,"created_at":"2019-01-09"}},{"node":{"id":"355","title":"写给 Bitcoiner 的 Mimblewimble 简介","name":null,"created_at":"2019-01-10"}},{"node":{"id":"356","title":"Bitcoin Core","name":null,"created_at":"2019-01-11"}},{"node":{"id":"357","title":"为何使用地址而不是公钥？","name":null,"created_at":"2019-01-12"}},{"node":{"id":"358","title":"比特币脚本的原理","name":null,"created_at":"2019-01-13"}},{"node":{"id":"359","title":"比特币的多重签名技术 Multisignature","name":null,"created_at":"2019-01-14"}}]}},"pageContext":{"slug":"/videos/179/"}}